/*
 * This file is generated by jOOQ.
 */
package com.libertest.generatedsources.entity.tables.records;


import com.libertest.generatedsources.entity.tables.Receitas;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ReceitasRecord extends UpdatableRecordImpl<ReceitasRecord> implements Record2<String, String> {

    private static final long serialVersionUID = 744979978;

    /**
     * Setter for <code>receitas.NOME</code>.
     */
    public void setNome(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>receitas.NOME</code>.
     */
    public String getNome() {
        return (String) get(0);
    }

    /**
     * Setter for <code>receitas.MODO_DE_PREPARO</code>.
     */
    public void setModoDePreparo(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>receitas.MODO_DE_PREPARO</code>.
     */
    public String getModoDePreparo() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Receitas.RECEITAS.NOME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Receitas.RECEITAS.MODO_DE_PREPARO;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getNome();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getModoDePreparo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getNome();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getModoDePreparo();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitasRecord value1(String value) {
        setNome(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitasRecord value2(String value) {
        setModoDePreparo(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ReceitasRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ReceitasRecord
     */
    public ReceitasRecord() {
        super(Receitas.RECEITAS);
    }

    /**
     * Create a detached, initialised ReceitasRecord
     */
    public ReceitasRecord(String nome, String modoDePreparo) {
        super(Receitas.RECEITAS);

        set(0, nome);
        set(1, modoDePreparo);
    }
}
